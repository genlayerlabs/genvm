From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: kp2pml30 <kp2pml30@gmail.com>
Date: Mon, 26 Aug 2024 12:22:48 +0400
Subject: [PATCH] allow reinterpret float instructions

---
 cranelift/wasm/src/code_translator.rs | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/cranelift/wasm/src/code_translator.rs b/cranelift/wasm/src/code_translator.rs
index 92e3a06..35e2b90 100644
--- a/cranelift/wasm/src/code_translator.rs
+++ b/cranelift/wasm/src/code_translator.rs
@@ -1073,22 +1073,18 @@ pub fn translate_operator<FE: FuncEnvironment + ?Sized>(
             state.push1(builder.ins().fcvt_to_uint_sat(I32, val));
         }
         Operator::F32ReinterpretI32 => {
-            if float_op_unreachable_check(environ, builder, state) { return Ok(()) }
             let val = state.pop1();
             state.push1(builder.ins().bitcast(F32, MemFlags::new(), val));
         }
         Operator::F64ReinterpretI64 => {
-            if float_op_unreachable_check(environ, builder, state) { return Ok(()) }
             let val = state.pop1();
             state.push1(builder.ins().bitcast(F64, MemFlags::new(), val));
         }
         Operator::I32ReinterpretF32 => {
-            if float_op_unreachable_check(environ, builder, state) { return Ok(()) }
             let val = state.pop1();
             state.push1(builder.ins().bitcast(I32, MemFlags::new(), val));
         }
         Operator::I64ReinterpretF64 => {
-            if float_op_unreachable_check(environ, builder, state) { return Ok(()) }
             let val = state.pop1();
             state.push1(builder.ins().bitcast(I64, MemFlags::new(), val));
         }
-- 
2.34.1

