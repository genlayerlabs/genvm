From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: kp2pml30 <kp2pml30@gmail.com>
Date: Mon, 30 Sep 2024 16:47:24 +0400
Subject: [PATCH] fixes after rebase

---
 Cargo.toml                           | 18 +++++++++---------
 cranelift/codegen/src/ir/trapcode.rs |  4 ----
 crates/cranelift/src/func_environ.rs |  3 ---
 crates/wasmtime/src/config.rs        |  8 +++-----
 tests/spec_testsuite                 |  2 +-
 5 files changed, 13 insertions(+), 22 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index 0bf32b2..9bbe4c2 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -268,15 +268,15 @@ wit-bindgen = { version = "0.32.0", default-features = false }
 wit-bindgen-rust-macro = { version = "0.32.0", default-features = false }
 
 # wasm-tools family:
-wasmparser = { version = "0.217.0", default-features = false }
-wat = "1.217.0"
-wast = "217.0.0"
-wasmprinter = "0.217.0"
-wasm-encoder = "0.217.0"
-wasm-smith = "0.217.0"
-wasm-mutate = "0.217.0"
-wit-parser = "0.217.0"
-wit-component = "0.217.0"
+wasmparser = { path = "../wasm-tools/crates/wasmparser", default-features = false }
+wat = { path = "../wasm-tools/crates/wat" }
+wast = { path = "../wasm-tools/crates/wat" }
+wasmprinter = { path = "../wasm-tools/crates/wasmprinter" }
+wasm-encoder = { path = "../wasm-tools/crates/wasm-encoder" }
+wasm-smith = { path = "../wasm-tools/crates/wasm-smith" }
+wasm-mutate = { path = "../wasm-tools/crates/wasm-mutate" }
+wit-parser = { path = "../wasm-tools/crates/wit-parser" }
+wit-component = { path = "../wasm-tools/crates/wit-component" }
 
 # Non-Bytecode Alliance maintained dependencies:
 # --------------------------
diff --git a/cranelift/codegen/src/ir/trapcode.rs b/cranelift/codegen/src/ir/trapcode.rs
index 3d692dd..dff0025 100644
--- a/cranelift/codegen/src/ir/trapcode.rs
+++ b/cranelift/codegen/src/ir/trapcode.rs
@@ -99,12 +99,8 @@ impl Display for TrapCode {
             Interrupt => "interrupt",
             User(x) => return write!(f, "user{x}"),
             NullReference => "null_reference",
-<<<<<<< HEAD
             ArrayOutOfBounds => "array_oob",
-=======
-            NullI31Ref => "null_i31ref",
             DeterministicMode => "deterministic mode violation (ir)",
->>>>>>> 1437e7a (add deterministic mode)
         };
         f.write_str(identifier)
     }
diff --git a/crates/cranelift/src/func_environ.rs b/crates/cranelift/src/func_environ.rs
index e2d2dbb..3f03c48 100644
--- a/crates/cranelift/src/func_environ.rs
+++ b/crates/cranelift/src/func_environ.rs
@@ -3000,8 +3000,6 @@ impl<'module_environment> cranelift_wasm::FuncEnvironment for FuncEnvironment<'m
         }
     }
 
-<<<<<<< HEAD
-<<<<<<< HEAD
     fn isa(&self) -> &dyn TargetIsa {
         &*self.isa
     }
@@ -3176,4 +3174,3 @@ fn index_type_to_ir_type(index_type: IndexType) -> ir::Type {
         IndexType::I64 => I64,
     }
 }
-}
diff --git a/crates/wasmtime/src/config.rs b/crates/wasmtime/src/config.rs
index 8d62e06..66d5922 100644
--- a/crates/wasmtime/src/config.rs
+++ b/crates/wasmtime/src/config.rs
@@ -159,11 +159,8 @@ struct ConfigTunables {
     generate_address_map: Option<bool>,
     debug_adapter_modules: Option<bool>,
     relaxed_simd_deterministic: Option<bool>,
-<<<<<<< HEAD
     signals_based_traps: Option<bool>,
-=======
     floats_enabled: Option<bool>,
->>>>>>> 1437e7a (add deterministic mode)
 }
 
 /// User-provided configuration for the compiler.
@@ -710,7 +707,8 @@ impl Config {
         self
     }
 
-    fn wasm_feature(&mut self, flag: WasmFeatures, enable: bool) -> &mut Self {
+    /// set feature
+    pub fn wasm_feature(&mut self, flag: WasmFeatures, enable: bool) -> &mut Self {
         self.enabled_features.set(flag, enable);
         self.disabled_features.set(flag, !enable);
         self
@@ -897,7 +895,7 @@ impl Config {
 
     /// get features
     pub fn get_features(&self) -> &WasmFeatures {
-        return &self.features;
+        return &self.enabled_features;
     }
 
     /// This option can be used to control the behavior of the [relaxed SIMD
diff --git a/tests/spec_testsuite b/tests/spec_testsuite
index ae5a669..e053650 160000
--- a/tests/spec_testsuite
+++ b/tests/spec_testsuite
@@ -1 +1 @@
-Subproject commit ae5a66933070b705dde56c2a71bf3fbc33282864
+Subproject commit e05365077e13a1d86ffe77acfb1a835b7aa78422
