import genlayer.py.eth as genvm_eth

from genlayer.py.types import *
from genlayer.py.storage import *


def test_eth_baz():
	meth = genvm_eth.MethodEncoder('baz', [u32, bool], bool)
	assert meth.selector.hex() == 'cdcd77c0'
	assert (
		meth.encode([69, True]).hex()
		== 'cdcd77c000000000000000000000000000000000000000000000000000000000000000450000000000000000000000000000000000000000000000000000000000000001'
	)


def test_eth_bar():
	meth = genvm_eth.MethodEncoder(
		'bar', [Array[Array[u8, typing.Literal[3]], typing.Literal[2]]], type(None)
	)
	assert meth.selector.hex() == 'fce353f6'
	meth.encode([[[1, 2, 3], [4, 5, 6]]])


def test_eth_sam():
	meth = genvm_eth.MethodEncoder('sam', [bytes, bool, list[u256]], type(None))
	assert meth.selector.hex() == 'a5643bf2'
	assert (
		meth.encode([b'dave', True, [1, 2, 3]]).hex()
		== 'a5643bf20000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000464617665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000003'
	)


def test_eth_approve():
	meth = genvm_eth.MethodEncoder('approve', [Address, u256], type(None))
	assert meth.selector.hex() == '095ea7b3'


def test_with_tuple_1():
	meth = genvm_eth.MethodEncoder('send', [tuple[u256], Address], type(None))
	assert meth.selector.hex() == '2e65cae2'


def test_nested_array():
	meth = genvm_eth.MethodEncoder(
		'transfer', [list[list[u256]], list[Address]], type(None)
	)
	assert meth.selector.hex() == '7a63729a'
	res = meth.encode(
		[
			[[123, 456], [789]],
			[
				Address('0x5B38Da6a701c568545dCfcB03FcB875f56beddC4'),
				Address('0x7b38da6a701c568545dcfcb03fcb875f56bedfb3'),
			],
		]
	)
	assert (
		res.hex()
		== '7a63729a000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000001c80000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000031500000000000000000000000000000000000000000000000000000000000000020000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc40000000000000000000000007b38da6a701c568545dcfcb03fcb875f56bedfb3'
	)


def test_dyn_tuple():
	meth = genvm_eth.MethodEncoder('const', [list[tuple[str, Address, str]]], type(None))
	res = meth.encode(
		[
			[
				('str1', Address('0x5B38Da6a701c568545dCfcB03FcB875f56beddC4'), 'str2'),
				(
					'str3',
					Address('0x7b38da6a701c568545dcfcb03fcb875f56bedfb3'),
					'my last string' * 20,
				),
			],
		]
	)
	assert (
		res.hex()
		== 'ed6df702000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc400000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000473747231000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004737472320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000007b38da6a701c568545dcfcb03fcb875f56bedfb300000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004737472330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001186d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e676d79206c61737420737472696e670000000000000000'
	)


def test_with_tuple_2():
	meth = genvm_eth.MethodEncoder('send', [tuple[u256, str]], type(None))
	assert meth.selector.hex() == 'eb0edd92'
