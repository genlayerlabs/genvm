name: GenVM tests
on: [push]
defaults:
  run:
    shell: bash -x {0}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: basic setup
        run: |
          sudo apt-get update -y && \
          sudo apt-get install -y --no-install-recommends ninja-build ruby curl git python3 zip wget tar tree && \
          git lfs install && \
          echo "CARGO_INCREMENTAL=1" >> $GITHUB_ENV && \
          export CARGO_INCREMENTAL=1
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.80.0
          components: rustfmt
          target: wasm32-wasi
          rustflags: ""
          cache-workspaces: |
            genvm -> target
            sdk-python -> target
            tools/softfloat-lib/patch-floats -> target
      - name: checkout submodules
        run: |
          cd "$GITHUB_WORKSPACE" && \
            git config --global user.email "worker@ci.ci" && \
            git config --global user.name "CI worker" && \
            git submodule update --init --recursive && \
            ./tools/git-third-party/git-third-party update --all
      - name: download wasi
        run: |
          cd "$GITHUB_WORKSPACE" && \
            mkdir -p build && \
            pushd build && \
            wget -q https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-24/wasi-sdk-24.0-x86_64-linux.tar.gz && \
            tar -xf wasi-sdk-24.0-x86_64-linux.tar.gz && \
            mv wasi-sdk-24.0-x86_64-linux wasi-sdk-24 && \
            popd
      - name: configure
        run: cd "$GITHUB_WORKSPACE" && ./tools/ya-build/ya-build config --preload ./.ci/release-conf.rb
      - name: build
        run: |
          cd "$GITHUB_WORKSPACE" && \
            ninja -v -C build && \
            tree build/out && \
            pushd "$GITHUB_WORKSPACE/build" && zip -r out.zip out config.json && popd
      - name: check format
        run: |
          ./build-scripts/cargo-fmt.sh && \
          git diff -U1 --exit-code
      - name: publish
        uses: actions/upload-artifact@v4
        with:
          name: all
          path: ${{ github.workspace }}/build/out.zip
  test-genvm-mock:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            genvm/testdata
            sdk-python/py
            .genvm-monorepo-root
      - uses: actions/download-artifact@v4
        with:
          name: all
      - run: |
          sudo apt-get install -y wabt && \
            python3 -m pip install -r genvm/testdata/runner/requirements.txt && \
            mkdir -p build && \
            mv out.zip build/out.zip && \
            pushd build && \
            unzip out.zip && \
            popd && \
            sudo apt-get install -y --no-install-recommends ca-certificates fonts-liberation libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils && \
            mkdir -p build/drivers && \
            pushd build/drivers && \
            wget -q https://storage.googleapis.com/chrome-for-testing-public/128.0.6613.119/linux64/chrome-linux64.zip && \
            wget -q https://storage.googleapis.com/chrome-for-testing-public/128.0.6613.119/linux64/chromedriver-linux64.zip && \
            unzip chromedriver-linux64.zip && \
            unzip chrome-linux64.zip && \
            popd && \
            true
      - name: genvm mock tests
        run: |
          PATH="$(pwd)/build/drivers/chrome-linux64:$PATH" ./build/drivers/chromedriver-linux64/chromedriver --port=4444 & \
          ./genvm/testdata/runner/run.py
  test-python:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            sdk-python
            .genvm-monorepo-root
      - uses: actions/download-artifact@v4
        with:
          name: all
      - run: |
          python3.12 -m pip install poetry && \
            pushd sdk-python && \
            poetry install && \
            popd && \
            mkdir -p build && \
            mv out.zip build/out.zip && \
            pushd build && \
            unzip out.zip && \
            popd
      - name: pytest
        run: |
          pushd sdk-python && \
          poetry run pytest -n auto && \
          popd
