name: GenVM tests
on: [push]
defaults:
  run:
    shell: bash -x {0}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get update -y && sudo apt-get install -y ninja-build ruby curl git python3 zip wget tar
      - uses: actions/checkout@v4
      - name: checkout submodules
        run: |
          cd "$GITHUB_WORKSPACE" && \
            git config --global user.email "worker@ci.ci" && \
            git config --global user.name "CI worker" && \
            git submodule update --init --recursive && \
            ./tools/git-third-party/git-third-party update --all
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.80.0
          components: rustfmt
          target: wasm32-wasi
          rustflags: ""
          cache-workspaces: |
            genvm -> target
            sdk-python -> target
            tools/softfloat-lib/patch-floats -> target
      - name: download wasi
        run: |
          cd "$GITHUB_WORKSPACE" && \
            mkdir -p build && \
            pushd build && \
            wget -q https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-24/wasi-sdk-24.0-x86_64-linux.tar.gz && \
            tar -xf wasi-sdk-24.0-x86_64-linux.tar.gz && \
            mv wasi-sdk-24.0-x86_64-linux wasi-sdk-24 && \
            popd
      - name: configure
        run: cd "$GITHUB_WORKSPACE" && ./tools/ya-build/ya-build config --config ./.ci/release-conf.rb
      - name: build
        run: |
          cd "$GITHUB_WORKSPACE" && \
            ninja -v -C build && \
            pushd "$GITHUB_WORKSPACE/build" && zip -r out.zip out && popd
      - name: publish
        uses: actions/upload-artifact@v4
        with:
          name: all
          path: ${{ github.workspace }}/build/out.zip
  test-genvm-mock:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            genvm/testdata
      - run: |
          mkdir -p build
          python3 -m pip install -r genvm/testdata/runner/requirements.txt
      - uses: actions/download-artifact@v4
        with:
          name: all
      - run: |
          mkdir -p build && \
            mkdir -p genvm/target && \
            mv out.zip build/out.zip && \
            pushd build && \
            unzip out.zip && \
            popd
      - name: genvm mock tests
        run: |
          ./genvm/testdata/runner/run.py
  test-python:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            sdk-python
      - run: |
          python3.12 -m pip install poetry && \
            pushd sdk-python && \
            poetry install && \
            popd
      - uses: actions/download-artifact@v4
        with:
          name: all
      - run: |
          mkdir -p build && \
            mv out.zip build/out.zip && \
            pushd build && \
            unzip out.zip && \
            ls -lhR . && \
            popd
      - name: avl tree tests
        run: |
          pushd sdk-python && \
          poetry run pytest && \
          popd
