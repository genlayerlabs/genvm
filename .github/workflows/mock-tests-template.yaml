name: GenVM build & run mock tests
on:
  workflow_call:
    inputs:
      build_type:
        type: string
        required: true
        description: build type
defaults:
  run:
    shell: bash -x {0}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: basic setup
        run: |
          sudo apt-get update -y && \
          sudo apt-get install -y --no-install-recommends pkg-config ninja-build ruby curl git python3 zip wget tar tree && \
          git lfs install
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.80.0
          components: rustfmt
          target: wasm32-wasi
          rustflags: ""
          cache-workspaces: |
            genvm -> target
            sdk-python -> target
            tools/softfloat-lib/patch-floats -> target
      - name: checkout submodules
        run: |
          cd "$GITHUB_WORKSPACE" && \
            git config --global user.email "worker@ci.ci" && \
            git config --global user.name "CI worker" && \
            git submodule update --init --recursive && \
            ./tools/git-third-party/git-third-party update --all
      - name: install tools and configure
        run: |
          cd "$GITHUB_WORKSPACE" && \
          ./build-scripts/install-tools.rb && \
          ./tools/ya-build/ya-build config --preload .ci/${{ inputs.build_type }}-conf.rb
      - name: check format
        run: |
          ninja -v -C build tags/codegen && \
          ./build-scripts/cargo-fmt.sh && \
          git diff -U1 --exit-code
      - name: build
        run: |
          cd "$GITHUB_WORKSPACE" && \
            ninja -v -C build && \
            tree build/out && \
            pushd "$GITHUB_WORKSPACE/build" && zip -r out.zip out config.json && popd
      - name: publish
        uses: actions/upload-artifact@v4
        with:
          name: all-${{ inputs.build_type }}
          path: ${{ github.workspace }}/build/out.zip

  test-genvm-mock:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            genvm/testdata
            sdk-python/py
            genvm/modules/default-impl/web-funcs/webdriver.dockerfile
            .genvm-monorepo-root
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: actions/download-artifact@v4
        with:
          name: all-${{ inputs.build_type }}
      - run: |
            sudo apt-get install -y wabt && \
            python3 -m pip install -r genvm/testdata/runner/requirements.txt && \
            mkdir -p build && \
            mv out.zip build/out.zip && \
            pushd build && \
            unzip out.zip && \
            popd && \
            true
      - name: genvm mock tests
        env:
          OPENAIKEY: ${{ secrets.OPENAIKEY }}
        run: |
          OPENAIKEY="" docker run --detach --rm --network host "$(docker build -q -t genvm/modules-webdriver -f genvm/modules/default-impl/web-funcs/webdriver.dockerfile genvm/modules/default-impl/web-funcs/)" && \
          sleep 5 && \
          ./genvm/testdata/runner/run.py
