name: GenVM build runners
on:
  workflow_call:
    outputs:
      artifact_name:
        value: ${{ jobs.gen_url.outputs.basename }}
      artifact_url:
        value: ${{ jobs.gen_url.outputs.gcs_url }}
defaults:
  run:
    shell: bash -x {0}

env:
  GCS_BUCKET: "gh-af"

jobs:
  gen_url:
    runs-on: ubuntu-latest
    outputs:
      dirname: ${{ steps.gen_url.outputs.dirname }}
      basename: ${{ steps.gen_url.outputs.basename }}
      gcs_url: ${{ steps.gen_url.outputs.gcs_url }}
      already_exists: ${{ steps.gen_url.outputs.already_exists }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 16
      - name: Generate upload url
        id: gen_url
        run: |
          SHA="$(git ls-files runners/ | grep -vP '(^runners/genlayer-py-std/tests/)|(/\.gitignore$)|(\.md$)' | sort | xargs sha256sum | sha256sum | sed 's/\s*-\s*$//')"
          DIR_NAME="genvm_runners_${SHA}"
          echo "dirname=$DIR_NAME" >> $GITHUB_OUTPUT
          BASE_NAME="runners.zip"
          echo "basename=$BASE_NAME" >> $GITHUB_OUTPUT
          GCS_URL="https://storage.googleapis.com/$GCS_BUCKET/$DIR_NAME/$BASE_NAME"
          echo "gcs_url=$GCS_URL" >> $GITHUB_OUTPUT
          if curl -o/dev/null -sfL -r 0-0 "$GCS_URL"
          then
            echo "already_exists=true" >> $GITHUB_OUTPUT
          else
            echo "already_exists=false" >> $GITHUB_OUTPUT
          fi

  build:
    runs-on: ubuntu-latest
    needs: [gen_url]
    if: ${{ needs.gen_url.outputs.already_exists == 'false' }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Get source
        uses: ./.github/actions/get-src
        with:
          install_also: --wasi --rust
          third_party: sdk-rust/third-party/wasi-rs runners/softfloat/berkeley-softfloat-3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          save-always: true
          path: /tmp/.buildx-cache
          key: runners-buildx-${{ github.sha }}
          restore-keys: |
            runners-buildx-
      - name: Configure
        run: |
          source env.sh && \
          ya-build config
      - name: Build extension
        run: |
          source env.sh && \
          ninja --verbose -C build genvm/runners/cpython-extension-lib && \
          git diff -U1 --exit-code
      - name: Build
        run: |
          source env.sh && \
          ninja --verbose -C build tags/runner && \
          tree build/out && \
          pushd build/out && \
          zip -r -9 ../runners.zip * && \
          popd

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Upload to GCS
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: build/${{ needs.gen_url.outputs.basename }}
          destination: ${{ env.GCS_BUCKET }}/${{ needs.gen_url.outputs.dirname }}
          parent: false

  build-done:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - gen_url
      - build
    steps:
      - run: |
          echo ${{ join(needs.*.result, ' ') }} | grep -vP 'failure|cancelled'
