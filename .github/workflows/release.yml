name: GenVM release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  # workflow_dispatch:

defaults:
  run:
    shell: bash -x {0}

env:
  GCS_BUCKET: "gh-af"

jobs:
  build-runners:
    uses: ./.github/workflows/genvm-build-runners.yaml
    secrets: inherit

  release-build-genvm-release-ubuntu-latest:
    uses: ./.github/workflows/genvm-build-template.yaml
    secrets: inherit
    with:
      runs_on: ubuntu-latest
      preloads: --preload .ci/release-conf.rb
      install_also: ""

  release-build-genvm-release-ubuntu-latest-aarch64:
    uses: ./.github/workflows/genvm-build-template.yaml
    secrets: inherit
    with:
      runs_on: ubuntu-latest
      preloads: --preload .ci/release-conf.rb --preload .ci/executor-target-linux-aarch64.rb
      install_also: --cross-linux-aarch64

  release-build-genvm-release-macos-latest:
    uses: ./.github/workflows/genvm-build-template.yaml
    secrets: inherit
    with:
      runs_on: macos-latest
      preloads: --preload .ci/release-conf.rb
      install_also: ""

  release-typing:
    runs-on: ubuntu-latest
    outputs:
      dirname: ${{ steps.gen_url.outputs.dirname }}
      artifact_name: ${{ steps.gen_url.outputs.basename }}
      artifact_url: ${{ steps.gen_url.outputs.gcs_url }}
    steps:
      - run: |
          mkdir -p build/py-types && \
          cp -r runners/genlayer-py-std/src/genlayer/ build/py-types/ && \
          find runners/py-libs/pure-py/ -mindepth 1 -maxdepth 1 -type d | cat - <(echo "build/py-types/") | xargs cp -r && \
          pushd build/py-types/ && \
          printf '#!/usr/bin/env bash\n\npython3 -m pyright --outputjson contract.py\n' > run.sh && \
          printf 'PLACE CONTRACT HERE\n' > contract.py && \
          chmod +x run.sh && \
          find . -name __pycache__ -type d | xargs rm -rf && \
          cd .. && \
          zip -r -9 py-types.zip py-types/ && \
          popd
      - name: Generate upload url
        id: gen_url
        run: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          DIR_NAME="genvm_types_${GITHUB_SHA}_${TIMESTAMP}"
          echo "dirname=$DIR_NAME" >> $GITHUB_OUTPUT
          BASE_NAME="py-types.zip"
          echo "basename=$BASE_NAME" >> $GITHUB_OUTPUT
          GCS_URL="https://storage.googleapis.com/$GCS_BUCKET/$DIR_NAME/$BASE_NAME"
          echo "gcs_url=$GCS_URL" >> $GITHUB_OUTPUT
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Upload to GCS
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: build/${{ steps.upload.outputs.basename }}
          destination: ${{ env.GCS_BUCKET }}/${{ steps.upload.outputs.dirname }}
          parent: false

  release-publish:
    needs:
      - build-runners
      - release-build-genvm-release-ubuntu-latest
      - release-build-genvm-release-macos-latest
      - release-build-genvm-release-ubuntu-latest-aarch64
      - release-typing
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for creating releases
    steps:
      - run: |
          wget -q ${{ needs.build-runners.outputs.artifact_url }} && \
          mv ${{ needs.build-runners.outputs.artifact_name }} genvm-runners.zip && \
          wget -q ${{ needs.release-build-genvm-release-ubuntu-latest.outputs.artifact_url }} && \
          mv ${{ needs.release-build-genvm-release-ubuntu-latest.outputs.artifact_name }} genvm-linux-amd64.zip && \
          wget -q ${{ needs.release-build-genvm-release-macos-latest.outputs.artifact_url }} && \
          mv ${{ needs.release-build-genvm-release-macos-latest.outputs.artifact_name }} genvm-macos-arm64.zip && \
          wget -q ${{ needs.release-build-genvm-release-ubuntu-latest-aarch64.outputs.artifact_url }} && \
          mv ${{ needs.release-build-genvm-release-ubuntu-latest-aarch64.outputs.artifact_name }} genvm-linux-arm64.zip && \
          wget -q ${{ needs.release-build-genvm-release-ubuntu-latest-aarch64.outputs.artifact_url }} && \
          mv ${{ needs.release-typing.outputs.artifact_name }} genvm-py-types.zip && \
          true

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            genvm-runners.zip
            genvm-linux-amd64.zip
            genvm-linux-arm64.zip
            genvm-macos-arm64.zip
            genvm-py-types.zip
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
