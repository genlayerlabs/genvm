name: GenVM release

on:
  workflow_dispatch:
    inputs:
      bump:
        type: string
        required: true
        description: "version to bump: "

defaults:
  run:
    shell: bash -x {0}

env:
  GCS_BUCKET: "gh-af"

jobs:
  gen-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.bump-semver.outputs.new_version }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ github.event.inputs.bump }}
      - run: |
          echo "new version will be: ${{ steps.bump-semver.outputs.new_version }}"

  build-runners:
    uses: ./.github/workflows/genvm-build-runners.yaml
    secrets: inherit

  release-build-genvm-release-ubuntu-latest:
    needs: [gen-tag]
    uses: ./.github/workflows/genvm-build-template.yaml
    secrets: inherit
    with:
      runs_on: ubuntu-latest
      preloads: --preload .ci/release-conf.rb
      install_also: ""
      tag: needs.gen-tag.outputs.tag

  release-build-genvm-release-ubuntu-latest-aarch64:
    needs: [gen-tag]
    uses: ./.github/workflows/genvm-build-template.yaml
    secrets: inherit
    with:
      runs_on: ubuntu-latest
      preloads: --preload .ci/release-conf.rb --preload .ci/executor-target-linux-aarch64.rb
      install_also: --cross-linux-aarch64
      tag: needs.gen-tag.outputs.tag

  release-build-genvm-release-macos-latest:
    needs: [gen-tag]
    uses: ./.github/workflows/genvm-build-template.yaml
    secrets: inherit
    with:
      runs_on: macos-latest
      preloads: --preload .ci/release-conf.rb
      install_also: ""
      tag: needs.gen-tag.outputs.tag

  release-data:
    uses: ./.github/workflows/build-data.yaml
    secrets: inherit

  release-publish:
    needs:
      - gen-tag
      - build-runners
      - release-build-genvm-release-ubuntu-latest
      - release-build-genvm-release-macos-latest
      - release-build-genvm-release-ubuntu-latest-aarch64
      - release-data
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Needed for creating releases
    steps:
      - uses: actions/checkout@v4
      - run: |
          curl -L --fail-with-body -H 'Accept: application/octet-stream' -o genvm-runners.zip ${{ needs.build-runners.outputs.artifact_url }} && \
          curl -L --fail-with-body -H 'Accept: application/octet-stream' -o genvm-linux-amd64.zip ${{ needs.release-build-genvm-release-ubuntu-latest.outputs.artifact_url }} && \
          curl -L --fail-with-body -H 'Accept: application/octet-stream' -o genvm-linux-arm64.zip ${{ needs.release-build-genvm-release-ubuntu-latest-aarch64.outputs.artifact_url }} && \
          curl -L --fail-with-body -H 'Accept: application/octet-stream' -o genvm-macos-arm64.zip ${{ needs.release-build-genvm-release-macos-latest.outputs.artifact_url }} && \
          curl -L --fail-with-body -H 'Accept: application/octet-stream' -o genvm-py-docs.zip  ${{ needs.release-data.outputs.docs_url }} && \
          curl -L --fail-with-body -H 'Accept: application/octet-stream' -o genvm-py-types.zip  ${{ needs.release-data.outputs.types_url }} && \
          true

      - run: |
          git tag ${{ needs.gen-tag.outputs.tag }} && \
          git push origin ${{ needs.gen-tag.outputs.tag }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            genvm-runners.zip
            genvm-linux-amd64.zip
            genvm-linux-arm64.zip
            genvm-macos-arm64.zip
            genvm-py-docs.zip
            genvm-py-types.zip
          name: Release ${{ github.ref_name }}
          tag_name: ${{ needs.gen-tag.outputs.tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
