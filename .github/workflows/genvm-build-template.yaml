name: GenVM build executor
on:
  workflow_call:
    inputs:
      preloads:
        type: string
        required: true
        description: preloads
      target:
        required: false
        description: additional target
        type: string
      runs_on:
        type: string
        required: true
        description: runner id
      tag:
        type: string
        required: false
        default: "none"
    outputs:
      artifact_name:
        value: ${{ jobs.build.outputs.artifact_name }}
      artifact_url:
        value: ${{ jobs.build.outputs.artifact_url }}
defaults:
  run:
    shell: bash -x {0}
env:
  GCS_BUCKET: "gh-af"
jobs:
  build:
    timeout-minutes: 30
    runs-on: ${{ inputs.runs_on }}
    outputs:
      artifact_name: ${{ steps.upload.outputs.basename }}
      artifact_url: ${{ steps.upload.outputs.gcs_url }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          git fetch origin 'refs/tags/*:refs/tags/*'
      - name: Get source
        uses: ./.github/actions/get-src
        with:
          third_party: executor/third-party/wasmtime executor/third-party/wasm-tools
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.84.0
          target: ${{inputs.target}}
          cache: false
          rustflags: ""
      - name: install tools and configure
        if: ${{ inputs.tag != 'none' }}
        run: |
          git tag ${{ inputs.tag }}
      - name: install tools and configure
        run: |
          cd "$GITHUB_WORKSPACE" && \
          source env.sh && \
          ./tools/ya-build/ya-build config ${{ inputs.preloads }}
      - name: build
        run: |
          cd "$GITHUB_WORKSPACE" && \
            source env.sh && \
            cargo --version && \
            ninja -v -C build genvm/executor/all genvm/modules &&
            find build/out -name '*.yaml' -print0 | xargs -0 perl -i -pe 's/# yaml-language-server: \$schema=\.\..*//g'
      - name: patch schema path for tag
        if: ${{ inputs.tag != 'none' }}
        run: |
          find build/out -name '*.yaml' -print0 | TAG="${{inputs.tag}}" xargs -0 perl -i -pe 's/(# yaml-language-server:.*)refs\/heads\/main(.*)/$1$ENV{TAG}$2/g'
      - name: patch schema path for commit
        if: ${{ inputs.tag == 'none' }}
        run: |
          find build/out -name '*.yaml' -print0 | TAG="$(git log -1 --format='%H')" xargs -0 perl -i -pe 's/(# yaml-language-server:.*)refs\/heads\/main(.*)/$1$ENV{TAG}$2/g'
      - name: package
        run: |
          tree build/out && \
          pushd build/out && \
          zip -r -9 ../genvm_executor.zip * && \
          popd

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Generate upload url
        id: upload
        run: |
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          DIR_NAME="genvm_executor_${GITHUB_SHA}_${TIMESTAMP}"
          echo "dirname=$DIR_NAME" >> $GITHUB_OUTPUT
          BASE_NAME="genvm_executor.zip"
          echo "basename=$BASE_NAME" >> $GITHUB_OUTPUT
          echo "gcs_url=https://storage.googleapis.com/$GCS_BUCKET/$DIR_NAME/$BASE_NAME" >> $GITHUB_OUTPUT
      - name: Upload to GCS
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: build/${{ steps.upload.outputs.basename }}
          destination: ${{ env.GCS_BUCKET }}/${{ steps.upload.outputs.dirname }}
          parent: false
