name: GenVM mock-integration tests
on:
  workflow_call:
    inputs:
      runs_on:
        type: string
        required: true
        description: runner id
      genvm_artifact_name:
        type: string
        required: true
      genvm_artifact_url:
        type: string
        required: true
      runners_artifact_name:
        type: string
        required: true
      runners_artifact_url:
        type: string
        required: true
    secrets:
      OPENAIKEY:
        required: true
defaults:
  run:
    shell: bash -x {0}
jobs:
  mock-tests:
    runs-on: ${{ inputs.runs_on }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip
      - name: Get source
        uses: ./.github/actions/get-src
        with:
          load_submodules: "false"
      - run: |
          sudo apt-get install -y wabt && \
          mkdir -p "$GITHUB_WORKSPACE/build/out" && \
          pushd "$GITHUB_WORKSPACE/build/out" && \
          wget -q ${{ inputs.genvm_artifact_url }} && \
          unzip ${{ inputs.genvm_artifact_name }} && \
          rm ${{ inputs.genvm_artifact_name }} && \
          wget -q ${{ inputs.runners_artifact_url }} && \
          unzip ${{ inputs.runners_artifact_name }} && \
          rm ${{ inputs.runners_artifact_name }} && \
          tree && \
          popd
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: mock-${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            mock-${{ runner.os }}-buildx-
      - name: Precompile
        run: |
          ./build/out/bin/genvm precompile
      - name: Run
        env:
          OPENAIKEY: ${{ secrets.OPENAIKEY }}
          HEURISTKEY: ${{ secrets.HEURISTKEY }}
          ANTHROPICKEY: ${{ secrets.ANTHROPICKEY }}
          XAIKEY: ${{ secrets.XAIKEY }}
          GEMINIKEY: ${{ secrets.GEMINIKEY }}
        run: |
          python3.12 -m pip install -r executor/testdata/runner/requirements.txt && \
          ./executor/testdata/web-container/run-test-docker.sh && \
          sleep 5 && \
          (./build/out/bin/genvm-module-web &) && \
          (./build/out/bin/genvm-module-llm &) && \
          sleep 2 && \
          python3.12 -u ./executor/testdata/runner/run.py --ci
      - name: Try to get coverage
        run: |
          rustup component add llvm-tools-preview &&
          ./build-scripts/ci/rust-cov.sh || true
